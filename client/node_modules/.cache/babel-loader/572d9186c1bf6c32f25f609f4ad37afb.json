{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nvar _createClass = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _wrapNativeSuper = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\ASUS VivoBook\\\\Desktop\\\\PI - Copie\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\nvar fs = require(\"fs\");\nvar gaxios_1 = require(\"gaxios\");\nvar jws = require(\"jws\");\nvar path = require(\"path\");\nvar util_1 = require(\"util\");\nvar readFile = fs.readFile ? (0, util_1.promisify)(fs.readFile) : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n  return _regeneratorRuntime().wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n}));\nvar GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nvar GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nvar ErrorWithCode = /*#__PURE__*/function (_Error) {\n  _inherits(ErrorWithCode, _Error);\n  function ErrorWithCode(message, code) {\n    var _this;\n    _classCallCheck(this, ErrorWithCode);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorWithCode).call(this, message));\n    _this.code = code;\n    return _this;\n  }\n  return ErrorWithCode;\n}(_wrapNativeSuper(Error));\nvar getPem;\nvar GoogleToken = /*#__PURE__*/function () {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  function GoogleToken(options) {\n    _classCallCheck(this, GoogleToken);\n    this.transporter = {\n      request: function request(opts) {\n        return (0, gaxios_1.request)(opts);\n      }\n    };\n    this.configure(options);\n  }\n  _createClass(GoogleToken, [{\n    key: \"hasExpired\",\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    value: function hasExpired() {\n      var now = new Date().getTime();\n      if (this.rawToken && this.expiresAt) {\n        return now >= this.expiresAt;\n      } else {\n        return true;\n      }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n  }, {\n    key: \"isTokenExpiring\",\n    value: function isTokenExpiring() {\n      var _a;\n      var now = new Date().getTime();\n      var eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n      if (this.rawToken && this.expiresAt) {\n        return this.expiresAt <= now + eagerRefreshThresholdMillis;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(callback) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof callback === 'object') {\n        opts = callback;\n        callback = undefined;\n      }\n      opts = Object.assign({\n        forceRefresh: false\n      }, opts);\n      if (callback) {\n        var cb = callback;\n        this.getTokenAsync(opts).then(function (t) {\n          return cb(null, t);\n        }, callback);\n        return;\n      }\n      return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n  }, {\n    key: \"getCredentials\",\n    value: function () {\n      var _getCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(keyFile) {\n        var ext, key, body, privateKey, clientEmail, _privateKey, _privateKey2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              ext = path.extname(keyFile);\n              _context2.t0 = ext;\n              _context2.next = _context2.t0 === '.json' ? 4 : _context2.t0 === '.der' ? 13 : _context2.t0 === '.crt' ? 13 : _context2.t0 === '.pem' ? 13 : _context2.t0 === '.p12' ? 17 : _context2.t0 === '.pfx' ? 17 : 25;\n              break;\n            case 4:\n              _context2.next = 6;\n              return readFile(keyFile, 'utf8');\n            case 6:\n              key = _context2.sent;\n              body = JSON.parse(key);\n              privateKey = body.private_key;\n              clientEmail = body.client_email;\n              if (!(!privateKey || !clientEmail)) {\n                _context2.next = 12;\n                break;\n              }\n              throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n            case 12:\n              return _context2.abrupt(\"return\", {\n                privateKey: privateKey,\n                clientEmail: clientEmail\n              });\n            case 13:\n              _context2.next = 15;\n              return readFile(keyFile, 'utf8');\n            case 15:\n              _privateKey = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                privateKey: _privateKey\n              });\n            case 17:\n              if (getPem) {\n                _context2.next = 21;\n                break;\n              }\n              _context2.next = 20;\n              return Promise.resolve().then(function () {\n                return require('google-p12-pem');\n              });\n            case 20:\n              getPem = _context2.sent.getPem;\n            case 21:\n              _context2.next = 23;\n              return getPem(keyFile);\n            case 23:\n              _privateKey2 = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                privateKey: _privateKey2\n              });\n            case 25:\n              throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function getCredentials(_x) {\n        return _getCredentials.apply(this, arguments);\n      }\n      return getCredentials;\n    }()\n  }, {\n    key: \"getTokenAsync\",\n    value: function () {\n      var _getTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(opts) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.inFlightRequest && !opts.forceRefresh)) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.inFlightRequest);\n            case 2:\n              _context3.prev = 2;\n              _context3.next = 5;\n              return this.inFlightRequest = this.getTokenAsyncInner(opts);\n            case 5:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 6:\n              _context3.prev = 6;\n              this.inFlightRequest = undefined;\n              return _context3.finish(6);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2,, 6, 9]]);\n      }));\n      function getTokenAsync(_x2) {\n        return _getTokenAsync.apply(this, arguments);\n      }\n      return getTokenAsync;\n    }()\n  }, {\n    key: \"getTokenAsyncInner\",\n    value: function () {\n      var _getTokenAsyncInner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(opts) {\n        var creds;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(this.isTokenExpiring() === false && opts.forceRefresh === false)) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", Promise.resolve(this.rawToken));\n            case 2:\n              if (!(!this.key && !this.keyFile)) {\n                _context4.next = 4;\n                break;\n              }\n              throw new Error('No key or keyFile set.');\n            case 4:\n              if (!(!this.key && this.keyFile)) {\n                _context4.next = 11;\n                break;\n              }\n              _context4.next = 7;\n              return this.getCredentials(this.keyFile);\n            case 7:\n              creds = _context4.sent;\n              this.key = creds.privateKey;\n              this.iss = creds.clientEmail || this.iss;\n              if (!creds.clientEmail) {\n                this.ensureEmail();\n              }\n            case 11:\n              return _context4.abrupt(\"return\", this.requestToken());\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getTokenAsyncInner(_x3) {\n        return _getTokenAsyncInner.apply(this, arguments);\n      }\n      return getTokenAsyncInner;\n    }()\n  }, {\n    key: \"ensureEmail\",\n    value: function ensureEmail() {\n      if (!this.iss) {\n        throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n      }\n    }\n  }, {\n    key: \"revokeToken\",\n    value: function revokeToken(callback) {\n      if (callback) {\n        this.revokeTokenAsync().then(function () {\n          return callback();\n        }, callback);\n        return;\n      }\n      return this.revokeTokenAsync();\n    }\n  }, {\n    key: \"revokeTokenAsync\",\n    value: function () {\n      var _revokeTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (this.accessToken) {\n                _context5.next = 2;\n                break;\n              }\n              throw new Error('No token to revoke.');\n            case 2:\n              url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n              _context5.next = 5;\n              return this.transporter.request({\n                url: url\n              });\n            case 5:\n              this.configure({\n                email: this.iss,\n                sub: this.sub,\n                key: this.key,\n                keyFile: this.keyFile,\n                scope: this.scope,\n                additionalClaims: this.additionalClaims\n              });\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function revokeTokenAsync() {\n        return _revokeTokenAsync.apply(this, arguments);\n      }\n      return revokeTokenAsync;\n    }()\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.keyFile = options.keyFile;\n      this.key = options.key;\n      this.rawToken = undefined;\n      this.iss = options.email || options.iss;\n      this.sub = options.sub;\n      this.additionalClaims = options.additionalClaims;\n      if (typeof options.scope === 'object') {\n        this.scope = options.scope.join(' ');\n      } else {\n        this.scope = options.scope;\n      }\n      this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n      if (options.transporter) {\n        this.transporter = options.transporter;\n      }\n    }\n    /**\n     * Request the token from Google.\n     */\n  }, {\n    key: \"requestToken\",\n    value: function () {\n      var _requestToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _a, _b, iat, additionalClaims, payload, signedJWT, r, body, desc;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              iat = Math.floor(new Date().getTime() / 1000);\n              additionalClaims = this.additionalClaims || {};\n              payload = Object.assign({\n                iss: this.iss,\n                scope: this.scope,\n                aud: GOOGLE_TOKEN_URL,\n                exp: iat + 3600,\n                iat: iat,\n                sub: this.sub\n              }, additionalClaims);\n              signedJWT = jws.sign({\n                header: {\n                  alg: 'RS256'\n                },\n                payload: payload,\n                secret: this.key\n              });\n              _context6.prev = 4;\n              _context6.next = 7;\n              return this.transporter.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                  grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                  assertion: signedJWT\n                },\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                responseType: 'json'\n              });\n            case 7:\n              r = _context6.sent;\n              this.rawToken = r.data;\n              this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n              return _context6.abrupt(\"return\", this.rawToken);\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](4);\n              this.rawToken = undefined;\n              this.tokenExpires = undefined;\n              body = _context6.t0.response && ((_a = _context6.t0.response) === null || _a === void 0 ? void 0 : _a.data) ? (_b = _context6.t0.response) === null || _b === void 0 ? void 0 : _b.data : {};\n              if (body.error) {\n                desc = body.error_description ? \": \".concat(body.error_description) : '';\n                _context6.t0.message = \"\".concat(body.error).concat(desc);\n              }\n              throw _context6.t0;\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[4, 13]]);\n      }));\n      function requestToken() {\n        return _requestToken.apply(this, arguments);\n      }\n      return requestToken;\n    }()\n  }, {\n    key: \"accessToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n  }, {\n    key: \"idToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n  }, {\n    key: \"tokenType\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n  }]);\n  return GoogleToken;\n}();\nexports.GoogleToken = GoogleToken;","map":null,"metadata":{},"sourceType":"script"}